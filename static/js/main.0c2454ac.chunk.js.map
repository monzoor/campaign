{"version":3,"sources":["Utils/Animation.js","Components/Layout/PublicLayout.js","Components/Home/InputItems.js","Components/Home/TableView.js","Utils/UnitFormatter.js","Components/Home/Home.js","Routes/RouterConfig.js","Utils/history.js","Routes/index.js","Components/Home/_Reducers/dataReducers.js","RootReducers/index.js","Store/index.js","Components/App.js","index.js"],"names":["fadeIn","keyframes","FadeInAnimation","styled","div","PublicLayout","children","this","props","className","Row","Col","Component","InputItems","inputValues","currentUploadedData","useSelector","state","uploadedDatas","data","useState","inputValue","setInputValue","disabledAllinput","setDisabledAllInput","startDate","setStartDate","endDate","setEndDate","handleDateChangeRaw","e","preventDefault","useEffect","inputName","inputStartDate","inputEndDate","length","xs","FormGroup","placeholderText","selected","selectsStart","dateFormat","onChange","date","disabled","isClearable","onChangeRaw","selectsEnd","minDate","InputGroup","Input","value","target","placeholder","InputGroupAddon","addonType","InputGroupText","currentTime","moment","Date","TableHeader","TableView","dispatch","useDispatch","momoTableHeader","useMemo","invalidData","setInvalidData","noDataFound","setNoDataFound","currentData","setCurrentData","window","AddCampaigns","Array","isArray","type","regexp","RegExp","filterItems","filter","item","isSameOrAfter","isSameOrBefore","test","name","Table","colSpan","map","inRange","isBetween","key","id","scope","Badge","color","pill","number","precision","abbrev","unrangifiedOrder","Math","floor","log10","abs","order","max","min","suffix","pow","toFixed","formatToUnits","Budget","Header","path","exact","component","Container","layout","createBrowserHistory","AppRoute","Layout","render","Switches","history","routes","route","i","status","initialState","action","combineReducers","middleware","thunk","enhancer","composeEnhancers","compose","applyMiddleware","store","createStore","rootRecucer","App","Routes","ReduxApp","reduxStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0c2454ac.chunk.js","sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst fadeIn = keyframes`\n        from {\n            opacity: 0;\n        }\n        to {\n            opacity: 1;\n        }\n        `;\nconst FadeInAnimation = styled.div`\n    animation: ${fadeIn} 1s;\n`;\nconst test = styled.div`\n    transition: all 0.5s;\n`;\n\nexport { FadeInAnimation, test };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\nimport { FadeInAnimation } from '../../Utils/Animation';\n\nclass PublicLayout extends Component {\n    static propTypes = {\n        children: PropTypes.oneOfType([\n            PropTypes.node,\n            PropTypes.arrayOf(PropTypes.node)\n        ]).isRequired\n    };\n\n    render() {\n        const { children } = this.props;\n\n        return (\n            <div className=\"container-fluid\">\n                <Row>\n                    <Col>\n                        <FadeInAnimation>{children}</FadeInAnimation>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default PublicLayout;\n","import React, { useState, useEffect } from 'react';\nimport {\n    Row,\n    Col,\n    InputGroup,\n    InputGroupText,\n    InputGroupAddon,\n    Input,\n    FormGroup\n} from 'reactstrap';\nimport { useSelector } from 'react-redux';\nimport DatePicker from 'react-datepicker';\n\nconst InputItems = ({ inputValues }) => {\n    const currentUploadedData = useSelector(state => state.uploadedDatas.data);\n    const [inputValue, setInputValue] = useState('');\n    const [disabledAllinput, setDisabledAllInput] = useState(true);\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const searhInputValue = e => {\n        setInputValue(e.target.value);\n        inputValues({\n            inputName: e.target.value,\n            inputStartDate: startDate,\n            inputEndDate: endDate\n        });\n    };\n\n    const handleDateChangeRaw = e => {\n        e.preventDefault();\n    };\n\n    useEffect(() => {\n        if (startDate && endDate) {\n            inputValues({\n                inputName: inputValue,\n                inputStartDate: startDate,\n                inputEndDate: endDate\n            });\n        } else {\n            inputValues({\n                inputName: inputValue\n            });\n        }\n        if (currentUploadedData.length > 0) {\n            setDisabledAllInput(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [startDate, endDate, currentUploadedData]);\n\n    return (\n        <Row className=\"py-4\">\n            <Col xs=\"4\">\n                <FormGroup>\n                    <DatePicker\n                        className=\"form-control\"\n                        placeholderText=\"Start Date\"\n                        selected={startDate}\n                        selectsStart\n                        dateFormat=\"MM/dd/yyyy\"\n                        onChange={date => setStartDate(date)}\n                        disabled={disabledAllinput}\n                        isClearable\n                        onChangeRaw={handleDateChangeRaw}\n                    />\n                </FormGroup>\n            </Col>\n            <Col xs=\"4\">\n                <FormGroup>\n                    <DatePicker\n                        className=\"form-control\"\n                        placeholderText=\"End Date\"\n                        selected={endDate}\n                        selectsEnd\n                        dateFormat=\"MM/dd/yyyy\"\n                        onChange={date => setEndDate(date)}\n                        disabled={!startDate}\n                        endDate={endDate}\n                        minDate={startDate}\n                        onChangeRaw={handleDateChangeRaw}\n                        isClearable\n                    />\n                </FormGroup>\n            </Col>\n            <Col xs=\"4\">\n                <InputGroup>\n                    <Input\n                        value={inputValue}\n                        onChange={searhInputValue}\n                        placeholder=\"Search By Name\"\n                        disabled={disabledAllinput}\n                    />\n                    <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>Search</InputGroupText>\n                    </InputGroupAddon>\n                </InputGroup>\n            </Col>\n        </Row>\n    );\n};\n\nexport default InputItems;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { Row, Col, Table, Badge } from 'reactstrap';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport InputItems from './InputItems';\n\nimport { formatToUnits } from '../../Utils/UnitFormatter';\n\nconst currentTime = moment(new Date(), 'MM/DD/YYYY');\n\nconst TableHeader = () => (\n    <tr>\n        <th>Name</th>\n        <th>Start Date</th>\n        <th>End Date</th>\n        <th>Active</th>\n        <th>Budget</th>\n    </tr>\n);\nconst TableView = () => {\n    const dispatch = useDispatch();\n    const momoTableHeader = useMemo(() => <TableHeader />, []);\n    const currentUploadedData = useSelector(state => state.uploadedDatas.data);\n    const [invalidData, setInvalidData] = useState(false);\n    const [noDataFound, setNoDataFound] = useState(true);\n    const [currentData, setCurrentData] = useState(currentUploadedData);\n\n    const searchInputs = ({ inputName, inputStartDate, inputEndDate }) => {\n        const regexp = new RegExp(inputName, 'i');\n        const filterItems = currentUploadedData.filter(item => {\n            if (inputStartDate && inputEndDate && inputName) {\n                return (\n                    moment(item.startDate, 'MM/DD/YYYY').isSameOrAfter(\n                        inputStartDate,\n                        'MM/DD/YYYY'\n                    ) &&\n                    moment(item.endDate, 'MM/DD/YYYY').isSameOrBefore(\n                        inputEndDate,\n                        'MM/DD/YYYY'\n                    ) &&\n                    regexp.test(item.name)\n                );\n            }\n            if (inputStartDate && inputEndDate) {\n                return (\n                    moment(item.startDate, 'MM/DD/YYYY').isSameOrAfter(\n                        inputStartDate,\n                        'MM/DD/YYYY'\n                    ) &&\n                    moment(item.endDate, 'MM/DD/YYYY').isSameOrBefore(\n                        inputEndDate,\n                        'MM/DD/YYYY'\n                    )\n                );\n            }\n            return regexp.test(item.name);\n        });\n        setCurrentData(filterItems);\n    };\n\n    useEffect(() => {\n        window.AddCampaigns = data => {\n            if (Array.isArray(data)) {\n                setNoDataFound(true);\n                dispatch({\n                    type: 'SELECTED_DATA',\n                    data\n                });\n            } else {\n                setInvalidData(true);\n                setNoDataFound(true);\n            }\n        };\n        if (\n            currentUploadedData.length > 0 &&\n            noDataFound &&\n            currentUploadedData !== currentData\n        ) {\n            setCurrentData(currentUploadedData);\n            setNoDataFound(false);\n            setInvalidData(false);\n        }\n        if (currentUploadedData.length === 0) {\n            setNoDataFound(true);\n            setInvalidData(false);\n        }\n    }, [currentData, dispatch, currentUploadedData, noDataFound]);\n    return (\n        <>\n            <InputItems inputValues={searchInputs} />\n            <Row>\n                <Col xs=\"12\">\n                    <Table>\n                        <thead>{momoTableHeader}</thead>\n                        <tbody>\n                            {noDataFound ? (\n                                <tr>\n                                    <td colSpan=\"5\" className=\"text-center\">\n                                        {invalidData\n                                            ? 'Invalid Data'\n                                            : 'No Data'}\n                                    </td>\n                                </tr>\n                            ) : (\n                                currentData.map(item => {\n                                    const startDate = moment(\n                                        item.startDate,\n                                        'MM/DD/YYYY'\n                                    );\n                                    const endDate = moment(\n                                        item.endDate,\n                                        'MM/DD/YYYY'\n                                    );\n                                    const inRange = currentTime.isBetween(\n                                        startDate,\n                                        endDate,\n                                        null,\n                                        '[]'\n                                    );\n                                    return (\n                                        <tr key={item.id}>\n                                            <th scope=\"row\">{item.name}</th>\n                                            <td>{item.startDate}</td>\n                                            <td>{item.endDate}</td>\n                                            <td>\n                                                <Badge\n                                                    color={\n                                                        inRange\n                                                            ? 'success'\n                                                            : 'danger'\n                                                    }\n                                                    pill\n                                                >\n                                                    &nbsp;\n                                                </Badge>\n                                                <span className=\"ml-2\">\n                                                    {inRange\n                                                        ? 'Active'\n                                                        : 'Inactive'}\n                                                </span>\n                                            </td>\n                                            <td>\n                                                {formatToUnits(item.Budget, 1)}\n                                            </td>\n                                        </tr>\n                                    );\n                                })\n                            )}\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default TableView;\n","const formatToUnits = (number, precision) => {\n    const abbrev = ['', 'k', 'M', 'B', 'T'];\n    const unrangifiedOrder = Math.floor(Math.log10(Math.abs(number)) / 3);\n    const order = Math.max(0, Math.min(unrangifiedOrder, abbrev.length - 1));\n    const suffix = abbrev[order];\n\n    return (number / Math.pow(10, order * 3)).toFixed(precision) + suffix;\n};\n\nexport { formatToUnits };\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport TableView from './TableView';\n\nconst Header = () => (\n    <Row className=\"text-center my-5\">\n        <Col xs=\"12\">\n            <h1>KUL - F-E Homework</h1>\n        </Col>\n    </Row>\n);\n\nconst Home = () => (\n    <Container>\n        <Header />\n        <TableView />\n    </Container>\n);\n\nexport default Home;\n","// Layouts\nimport PublicLayout from '../Components/Layout/PublicLayout';\n\n// Generale component\n// import NotFound from '../Components/404';\n\n// Compoenent\nimport Home from '../Components/Home/Home';\n\nexport default [\n    {\n        path: '/',\n        type: 'public',\n        exact: true,\n        component: Home,\n        layout: PublicLayout\n    }\n];\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport routes from './RouterConfig';\nimport history from '../Utils/history';\n\nconst AppRoute = ({ component: Component, layout: Layout }) => {\n    return (\n        <Route\n            render={props => (\n                <Layout>\n                    <Component {...props} />\n                </Layout>\n            )}\n        />\n    );\n};\n\nAppRoute.propTypes = {\n    component: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.object\n    ]).isRequired,\n    layout: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.object\n    ]).isRequired\n};\n\nconst Switches = () => {\n    return (\n        <Router history={history}>\n            <div>\n                <Switch>\n                    {routes.map((route, i) => (\n                        <AppRoute\n                            key={i}\n                            path={route.path}\n                            type={route.type}\n                            exact={route.exact}\n                            component={route.component}\n                            layout={route.layout}\n                            status={route.layout || null}\n                        />\n                    ))}\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n\nexport default Switches;\n","const initialState = {\n    data: []\n};\n\nconst uploadedDatas = (state = initialState, action) => {\n    switch (action.type) {\n    case 'SELECTED_DATA': {\n        const { data } = action;\n        return {\n            ...state,\n            data\n        };\n    }\n    default:\n        return state;\n    }\n};\nexport default uploadedDatas;\n","import { combineReducers } from 'redux';\nimport uploadedDatas from '../Components/Home/_Reducers/dataReducers';\n\nexport default combineReducers({\n    uploadedDatas\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootRecucer from '../RootReducers/index';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-undef */\nconst composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            name: 'MyApp',\n            actionsBlacklist: ['REDUX_STORAGE_SAVE']\n        })\n        : compose;\n/* eslint-enable */\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\n\nconst store = createStore(rootRecucer, initialState, enhancer);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Routes from '../Routes';\nimport reduxStore from '../Store';\n\nconst App = () => <Routes />;\n\nconst ReduxApp = () => (\n    <Provider store={reduxStore}>\n        <App />\n    </Provider>\n);\nexport default ReduxApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './Assets/scss/App.scss';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}